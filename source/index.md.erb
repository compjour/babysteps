---
title: Computational Baby Steps
layout: home
---




# Computational Baby Steps

#### Hey Stanford Journalism students:

Go to this [landing page for the hour-long bootcamp](/stanford-bootcamp). You can refer to the rest of this material later.

-----------------

#### Everyone else:

This is a set of tutorials to acquaint data journalists with the _concept_ of going past friendly graphical user interfaces and toward the use of computing "power tools".

I am to cover three totally different subject areas that are each extremely powerful on their own, but even moreso when used in concert:

- Keyboard shortcuts and plaintext editors
- Regular expressions to match patterns n text.
- Shell scripting, aka Bash programming, aka the command line, aka that thing that looks like the Matrix, via the OS X Terminal.




## Under construction

(Incomplete list of incomplete tutorials)

[Keyboard shortcuts cheat sheet](/cheatsheets/keyboard)

[Everyday Shell Exercises](/lessons/everyday-shell-exercises)

[The Terrifying Terminal](/lessons/the-terrifying-terminal/)


### Shakespeare examples

- [Introduction to your text editor and regular expressions and Shakespeare](/lessons/shakespeare-gui-regex/): What are regular expressions and how to use them in your text editor.

- [Shakespeare and regex from the command-line](/lessons/shakespeare-cli-regex): examples of doing regex from the command-line.


### Baby names walkthrough

- [Point-and-click exploration of Beyonce as a popular baby name](/lessons/baby-steps-gui/): The old-fashioned way of getting the data and searching it.

- [Command-line exploration of Beyonce (and more) as a popular baby name](/lessons/baby-steps-cli/): Same _conceptual_ steps, but using a far more powerful, flexible interface.

- [Visualizing the baby name trends in Excel](/lessons/baby-names-cleaning-cli/):  It takes a bit more command-line work to get the data in shape for visualization software...

- [Using regular expressions to explore the baby names](/lessons/baby-names-regex-sed-cli/) - Why stop at analyzing and visualizing a few names? With regular expressions, and a couple more (big) shell programming concepts, we  can expand our analysis exponentially with little more (manual) labor of our own.



# Other resources


- [Software Carpentry's tutorial on The Unix Shell](http://swcarpentry.github.io/shell-novice/)

- [General purpose command-line tools](http://compciv.org/unix-tools): I put together this guide for last year's session of Computational Methods in the Civic Sphere.

- [Regular-expressions.info](http://www.regular-expressions.info/) - the most comprehensive tutorial on regular expressions.

- [Regexr.com](http://regexr.com/): A place to test and link to regexes

- [Happy 40th birthday to grep](https://medium.com/@rualthanzauva/grep-was-a-private-command-of-mine-for-quite-a-while-before-i-made-it-public-ken-thompson-a40e24a5ef48) - grep is the famous Unix tool for speedy text matching, 40 years old and going strong.

- [Ashley Madison Code Shows More Women, and More Bots](http://gizmodo.com/ashley-madison-code-shows-more-women-and-more-bots-1727613924): a novel use of grep to quickly sift through gigabytes of data.


