---
title: A Bootcamp of Computational Power Tools 
layout: home
---

This webpage is for the September 17, 2015 hour-long bootcamp for the 2015-2016 [Stanford Journalism](http://journalism.stanford.edu) cohort. More context and lessons, etc., to be added later.

The lesson plan assumes you're trying it in the McClatchy Hall j-school computer lab with the OS X 10.10 Macs and pre-installed software. If not, j[ump here for some set up instructions for your own computer](#setup-instructions).


### Table of contents
{:.no_toc}

* TOC
{:toc}


# How to use your keyboard

A [list of generally-useful commands (for the year) can be found here](/cheatsheets/keyboard).

For this lesson, these are the most important:

- __Switch Applications:__ Command + Tab

  <%= kbcombo("Command", "Tab") %>

- __Switch windows (within a single app):__ Command + Tilde

  <%= kbcombo("Command", "~") %>

  
- __Autocomplete (inside Terminal):__ Tab

  <%= kbcombo("Tab") %>



Try to use these __as much as possible__ throughout these lessons. I don't care if you're Cmd-Tabbing your way between the bootcamp lessons and Facebook, that's still a huge improvement over mouse-clicking.



# Making an earthquake map

All of the subsequent lessons will involve staring at walls of text. But at least we'll start off by making a pretty map in CartoDB:

<iframe width="100%" height="400" frameborder="0" src="https://dundee.cartodb.com/viz/31df1b04-5d22-11e5-b446-0e6e1df11cbf/embed_map" allowfullscreen webkitallowfullscreen mozallowfullscreen oallowfullscreen msallowfullscreen></iframe>


The USGS page for [finding and downloading earthquake CSVs](http://earthquake.usgs.gov/earthquakes/feed/v1.0/csv.php).

The direct URL for: Significant Earthquakes in the Past 30 Days:

[`http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv`](http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/significant_month.csv)

The direct URL for: All Earthquakes, Past 30 Days:

[`http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.csv`](http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/all_month.csv)


## Mapping services

- [Fusion Tables](https://support.google.com/fusiontables/answer/2571232?hl=en) (it's easiest to just go through your [drive.google.com](https://drive.google.com)) and click the __New__ button.
- [Google My Maps](https://www.google.com/mymaps) - again, easier to go through [drive.google.com](https://drive.google.com).
- [CartoDB](https://cartodb.com) - Go ahead and sign up for an account, you'll probably use this service throughout the year.

You can see the map I created with CartoDB here:

https://dundee.cartodb.com/viz/31df1b04-5d22-11e5-b446-0e6e1df11cbf/map

The notes for this lesson are here: [Making earthquake maps from text](http://babysteps.compjour.org/lessons/earthquakes-csv-map/)

# The Atom text editor, regular expressions, and Shakespeare

The URL for the full works of Shakespeare:

[`http://ocw.mit.edu/ans7870/6/6.006/s08/lecturenotes/files/t8.shakespeare.txt`](http://ocw.mit.edu/ans7870/6/6.006/s08/lecturenotes/files/t8.shakespeare.txt)

Open up the Atom text editor. Hit __Command + F__ to bring up the __Find__ panel. Select the regex button:

![image](/files/images/lessons/atom-find-panel-regex.jpg)


The notes for this section: [An introduction to regular expressions with Shakespeare](/lessons/shakespeare-gui-regex/)


# How to get to your Terminal

If you go to Finder, it's in the __Applications/Utilities__ folder.

Or, with Finder active, use the key combo to activate the __Go to Folder__ popup:

<%= kbcombo("Command", "Shift", "G") %>

Use __Tab__ to autocomplete your way to the __Terminal.app__

# How to play with the Terminal

A sample from "The Waste Land":

[`http://babysteps.compjour.org/files/data/wasteland.txt`](http://babysteps.compjour.org/files/data/wasteland.txt)

The notes for this section can be found here: [Fun times with the Terminal](/lessons/fun-terminal/)

# Fun with baby names

The U.S. Social Security Administration's page, [Popular Baby Names: Beyond the Top 1000 Names](http://www.ssa.gov/oact/babynames/limits.html)

The URL for the "National Data":

[`http://www.ssa.gov/oact/babynames/names.zip`](http://www.ssa.gov/oact/babynames/names.zip)

Notes for this section: [Point-and-click exploration of Beyonce as a popular baby name](/lessons/baby-steps-gui/)


# Fun with Secretary Clinton's State Department Inbox

We may or may not get to this:

[http://stash.compjour.org/babysteps/clinton_email_august_pdf_w_text.zip](http://stash.compjour.org/babysteps/clinton_email_august_pdf_w_text.zip)


([notes under construction, probably should not read them](http://graphics.wsj.com/hillary-clinton-email-documents/))



# Setup instructions

The [Atom text editor](https://atom.io/) can be [downloaded and installed for free](https://atom.io/).

The Silver Searcher tool is a little more complicated. First of all, you need to get to your __Terminal__. And then the easiest route is to install a program named [Homebrew](http://brew.sh/)...which can be a little involved. If you feel uncertain about it -- and you should, because [the shell is terrifying](http://thenextweb.com/media/2012/05/21/how-pixars-toy-story-2-was-deleted-twice-once-by-technology-and-again-for-its-own-good/) -- there's no rush, send me a note and I can help you with it.


## Fun reading

The uses covered in this workshop are pretty basic. But here's a fun, recent example of __grep__ (the spiritual predecessor of __ag__) in investigative journalism. Via Gizmodo's Annalee Newitz: [Ashley Madison Code Shows More Women, and More Bots](http://gizmodo.com/ashley-madison-code-shows-more-women-and-more-bots-1727613924):

> It’s not easy to sort through thousands of lines of code, but two things can make it faster. One is a simple but powerful search program called grep that can search text for any phrase you like. The other is a habit that engineers have of writing comments about what they’re doing in the code. Armed with grep, I could look for key phrases in both comments and the code itself. 

> I knew from the company emails that the engineers and managers used certain terms for the bots, including “hosts” and “engagers.” Perhaps one of the most poignant parts of reading the engineers’ comments in the code was when I uncovered a set of descriptions for how the engager bots should act. 


