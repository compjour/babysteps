---
title: The Terrifying Terminal
---

This lesson is to introduce you -- _slowly_ -- to what may be a terrifying interface. The important thing is that everything in this lesson involves doing th


![makin directories](/files/images/mkdir-literal-strings.gif)


# What is the Terminal/Bash/The Shell?


- shell scripting
- command-line scripting
- Bash scripting

## Why is so terrifying about Terminal?

There's more than one reason. Modern computing is so user-friendly -- open browser, click "Download" link, file magically appears -- that it is jarring to see the details. Files have names. They take up space on the computer and exist at a specific address.

But the shell is terrifying to even programmers. The language used by the modern Unix-like shell still has the design sensibilities -- good and bad -- of a language designed for the limited hardware of the 1970s.

While it's true that the shell is just another way to command your computer, it's no longer the user-friendly inter

## Be careful!

There's no shame in being confused. If something about a command confuses you, just don't run it. If you're the type of clumsy typistTKTKT










 And, conversely programs printed their output to: whether it was to a printer, to the screen, to a







# Tab (to autocomplete) is our savior

# Go slow

## Spaces are deadly

If you are a student reading this right now, you may be too young to remember a time when file systems didn't allow spaces or non-alphanumeric characters when naming files. But Unix was designed under those constraints. Remember how comma-delimited files (i.e. CSVs) use commas as a way to denote the separate data columns? In Unix, __spaces__ do that function. 

A lot of tragic-comedic computing errors have occurred because shell scripters 

## When a dot is not a dot

These shell commands (written in the Bash language):

- `grep grep example.txt`
- `grep "grep example.txt"`
- `grep "$grep" example.txt`
- `grep '$grep' example.txt`

They look very similar, but they all do very different things. Granted, the exact text in these examples is a little contrived -- although it's not unusual to want to __grep__ (i.e. __ag__) for the term __grep__ in a huge codebase. 

But the point is, language is complicated. Just like how in English, the following thre

- She said she's selling Sarah's seashells.
- She said, "She's selling Sarah's seashells."
- "She said, 'She's selling Sarah's seashells.'"


